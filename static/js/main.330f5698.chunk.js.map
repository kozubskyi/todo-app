{"version":3,"sources":["components/Stats/Stats.js","components/TodoList/TodoList.js","components/TodoCreator/TodoCreator.js","App.js","index.js"],"names":["Stats","todos","className","length","filter","todo","type","completed","TodoList","this","props","map","style","backgroundColor","id","checked","htmlFor","onClick","handleCompletedStatus","text","handleTodoDelete","Component","TodoCreator","state","onFormSubmit","event","preventDefault","uuidv4","handleFormSubmit","formReset","setState","changeInputValue","target","value","onSubmit","onChange","autoComplete","App","prevState","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","handleTodoCompleting","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.330f5698.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Stats.scss';\r\n\r\nconst Stats = ({ todos }) => {\r\n  return (\r\n    <div className=\"stats\">\r\n      <p className=\"stats__all-todos\">Всего: {todos.length}</p>\r\n      <p className=\"stats__important-todos\">\r\n        Важных: {todos.filter(todo => todo.type === 'important' && !todo.completed).length}\r\n      </p>\r\n      <p className=\"stats__done-todos\">Выполненных: {todos.filter(todo => todo.completed).length}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\n\r\nimport './TodoList.scss';\r\n\r\nclass TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"line\"></div>\r\n        <ul className=\"todo__list\">\r\n          {this.props.todos.map(todo => {\r\n            return (\r\n              <li\r\n                className=\"todo__item\"\r\n                style={{ backgroundColor: todo.type === 'important' && 'rgb(255, 175, 175)' }}\r\n                key={todo.id}\r\n              >\r\n                <input type=\"checkbox\" id={todo.id} checked={todo.completed} />\r\n                <label htmlFor={todo.id} onClick={() => this.props.handleCompletedStatus(todo.id)}>\r\n                  {todo.text}\r\n                </label>\r\n                <button type=\"button\" className=\"edit-todo\"></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-todo\"\r\n                  onClick={() => this.props.handleTodoDelete(todo.id)}\r\n                ></button>\r\n              </li>\r\n            );\r\n          })}\r\n          {/* {this.props.todos\r\n          .filter(todo => todo.type === 'important' && !todo.completed)\r\n          .map(todo => {\r\n            return (\r\n              <li className=\"todo__item todo__item__important\" key={todo.id}>\r\n                <input type=\"checkbox\" id={todo.id} checked={todo.completed} />\r\n                <label htmlFor={todo.id} onClick={() => this.props.handleCompletedStatus(todo.id)}>\r\n                  {todo.text}\r\n                </label>\r\n                <button type=\"button\" className=\"edit-todo\"></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-todo\"\r\n                  onClick={() => this.props.handleTodoDelete(todo.id)}\r\n                ></button>\r\n              </li>\r\n            );\r\n          })}\r\n        <div className=\"line\"></div>\r\n        {this.props.todos\r\n          .filter(todo => todo.type === 'standart' && !todo.completed)\r\n          .map(todo => {\r\n            return (\r\n              <li className=\"todo__item\" key={todo.id}>\r\n                <input type=\"checkbox\" id={todo.id} checked={todo.completed} />\r\n                <label htmlFor={todo.id} onClick={() => this.props.handleCompletedStatus(todo.id)}>\r\n                  {todo.text}\r\n                </label>\r\n                <button type=\"button\" className=\"edit-todo\"></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-todo\"\r\n                  onClick={() => this.props.handleTodoDelete(todo.id)}\r\n                ></button>\r\n              </li>\r\n            );\r\n          })}\r\n        <div className=\"line\"></div>\r\n        {this.props.todos\r\n          .filter(todo => todo.completed)\r\n          .map(todo => {\r\n            return (\r\n              <li className=\"todo__item\" key={todo.id}>\r\n                <input type=\"checkbox\" id={todo.id} checked={todo.completed} />\r\n                <label htmlFor={todo.id} onClick={() => this.props.handleCompletedStatus(todo.id)}>\r\n                  {todo.text}\r\n                </label>\r\n                <button type=\"button\" className=\"edit-todo\"></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-todo\"\r\n                  onClick={() => this.props.handleTodoDelete(todo.id)}\r\n                ></button>\r\n              </li>\r\n            );\r\n          })} */}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoCreator.scss';\r\n\r\nclass TodoCreator extends Component {\r\n  state = {\r\n    text: '',\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const todo = { id: uuidv4(), text: this.state.text, type: 'standart', completed: false };\r\n    todo.text !== '' && this.props.handleFormSubmit(todo);\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => this.setState({ text: '' });\r\n\r\n  changeInputValue = event => this.setState({ text: event.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"todo-creator__form\" onSubmit={this.onFormSubmit}>\r\n        <input type=\"text\" value={this.state.text} onChange={this.changeInputValue} autoComplete=\"off\" />\r\n        <button type=\"submit\">Добавить</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoCreator;\r\n","import React, { Component } from 'react';\n\nimport 'reset-css';\nimport './App.scss';\n\n// import Header from './components/Header/Header';\nimport Stats from './components/Stats/Stats';\nimport TodoList from './components/TodoList/TodoList';\n// import AddTodoButtonS from './components/AddTodoButtonS/AddTodoButtonS';\n// import AddTodoButton from './components/AddTodoButton/AddTodoButton';\n// import Modal from './components/Modal/Modal';\nimport TodoCreator from './components/TodoCreator/TodoCreator';\n\nclass App extends Component {\n  state = {\n    todos: [\n      { id: 'id-1', text: 'Test todo - standart version', type: 'standart', completed: false },\n      { id: 'id-2', text: 'Test todo - important version', type: 'important', completed: false },\n    ],\n  };\n\n  componentDidMount() {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    todos !== null && this.setState({ todos: todos });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.todos !== this.state.todos && localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    // localStorage.clear();\n  }\n\n  handleFormSubmit = todo => this.setState({ todos: [todo, ...this.state.todos] });\n\n  handleTodoDelete = id => this.setState({ todos: this.state.todos.filter(todo => todo.id !== id) });\n\n  handleCompletedStatus = id => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === id ? { ...todo, completed: !todo.completed } : todo)),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        {/* <Header /> */}\n        <Stats todos={this.state.todos} />\n        <TodoList\n          todos={this.state.todos}\n          handleTodoDelete={this.handleTodoDelete}\n          handleTodoCompleting={this.handleTodoCompleting}\n          handleCompletedStatus={this.handleCompletedStatus}\n        />\n        <TodoCreator todos={this.state.todos} handleFormSubmit={this.handleFormSubmit} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}