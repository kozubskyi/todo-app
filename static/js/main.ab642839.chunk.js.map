{"version":3,"sources":["components/Stats/Stats.js","components/TodoList/TodoList.js","components/Todo/Todo.js","components/TodoCreator/TodoCreator.js","components/Backdrop/Backdrop.js","components/TodoEditor/TodoEditor.js","App.js","index.js"],"names":["Stats","todos","filterTodos","className","length","filter","todo","completed","type","onClick","TodoList","children","Todo","array","upTodo","downTodo","handleTodoEdit","handleTodoDelete","onTodoClick","map","id","onChange","checked","htmlFor","text","indexOf","TodoCreator","min","max","handleFormSubmit","useState","setText","placeholders","formReset","onSubmit","event","preventDefault","uuidv4","value","target","autoComplete","placeholder","Math","floor","random","Backdrop","closeEditingForm","body","document","querySelector","style","height","scrollHeight","TodoEditor","todoText","handleTodoTextEdit","autoFocus","App","state","todoToUpdateText","todoToUpdateId","isTodoEditing","setState","index","newTodos","clickedTodo","splice","console","log","localStorage","setItem","JSON","stringify","prevState","importantTodos","standartTodos","completedTodos","parse","getItem","this","prevProps","isTodoDeleting","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab642839.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Stats.scss';\r\n\r\nconst Stats = ({ todos, filterTodos }) => {\r\n  return (\r\n    <header>\r\n      <div className=\"stats\">\r\n        <button className=\"stats__btn stats__all-todos\">{todos.length}</button>\r\n        <button className=\"stats__btn stats__undone-todos\">{todos.filter(todo => !todo.completed).length}</button>\r\n        {/* <button className=\"stats__btn stats__important-todos\">\r\n          {todos.filter(todo => todo.type === 'important' && !todo.completed).length}\r\n        </button> */}\r\n        <button className=\"stats__btn stats__done-todos\">{todos.filter(todo => todo.completed).length}</button>\r\n      </div>\r\n      <button className=\"button filter-btn\" type=\"button\" onClick={filterTodos}>\r\n        Фильтровать\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\n\r\nconst TodoList = ({ children }) => {\r\n  return <ul className=\"todo__list\">{children}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Todo.scss';\r\n\r\n//* Todo как обычная функция (переписанная на хуки)\r\n\r\nconst Todo = ({ todos, upTodo, downTodo, handleTodoEdit, handleTodoDelete, onTodoClick }) => {\r\n  const makeMarkup = array => {\r\n    return array.map(todo => {\r\n      return (\r\n        <li className={`todo__item ${todo.type}`} key={todo.id}>\r\n          <input type=\"checkbox\" id={todo.id} onChange={() => onTodoClick(todo.id)} checked={todo.completed} />\r\n          <label htmlFor={todo.id}>{todo.text}</label>\r\n          <div className=\"move-todo-block\">\r\n            <button type=\"button\" className=\"move-todo up-todo\" onClick={() => upTodo(array.indexOf(todo))}></button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"move-todo down-todo\"\r\n              onClick={() => downTodo(array.indexOf(todo))}\r\n            ></button>\r\n          </div>\r\n          <button type=\"button\" className=\"edit-todo\" onClick={() => handleTodoEdit(todo.text, todo.id)}></button>\r\n          <button type=\"button\" className=\"delete-todo\" onClick={() => handleTodoDelete(todo.id)}></button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  // const importantTodos = todos.filter(todo => todo.type === 'important' && !todo.completed);\r\n  // const standartTodos = todos.filter(todo => todo.type === 'standart' && !todo.completed);\r\n  // const completedTodos = todos.filter(todo => todo.completed);\r\n\r\n  return (\r\n    <>\r\n      {makeMarkup(todos)}\r\n      {/* {makeMarkup(importantTodos)}\r\n          {makeMarkup(standartTodos)}\r\n          {makeMarkup(completedTodos)} */}\r\n    </>\r\n  );\r\n};\r\n\r\n//* Todo написанная классом\r\n\r\n// class Todo extends Component {\r\n//   componentDidMount() {\r\n//     console.log('componentDidMount');\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     console.log('componentWillUnmount');\r\n//   }\r\n\r\n//   makeMarkup = array => {\r\n//     return array.map(todo => {\r\n\r\n//       return (\r\n//         <li className={`todo__item ${todo.type}`} key={todo.id}>\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             id={todo.id}\r\n//             onChange={() => this.props.onTodoClick(todo.id)}\r\n//             checked={todo.completed}\r\n//           />\r\n//           <label htmlFor={todo.id}>{todo.text}</label>\r\n//           <div className=\"move-todo-block\">\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"move-todo up-todo\"\r\n//               onClick={() => this.props.upTodo(array.indexOf(todo))}\r\n//             ></button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"move-todo down-todo\"\r\n//               onClick={() => this.props.downTodo(array.indexOf(todo))}\r\n//             ></button>\r\n//           </div>\r\n//           <button type=\"button\" className=\"edit-todo\"></button>\r\n//           <button type=\"button\" className=\"delete-todo\" onClick={() => this.props.handleTodoDelete(todo.id)}></button>\r\n//         </li>\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     // const importantTodos = this.props.todos.filter(todo => todo.type === 'important' && !todo.completed);\r\n//     // const standartTodos = this.props.todos.filter(todo => todo.type === 'standart' && !todo.completed);\r\n//     // const completedTodos = this.props.todos.filter(todo => todo.completed);\r\n\r\n//     return (\r\n//       <>\r\n//         {this.makeMarkup(this.props.todos)}\r\n\r\n//         {/* {this.makeMarkup(importantTodos)}\r\n//           {this.makeMarkup(standartTodos)}\r\n//           {this.makeMarkup(completedTodos)} */}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoCreator.scss';\r\n\r\nconst TodoCreator = ({ todos, handleFormSubmit }) => {\r\n  const [text, setText] = useState('');\r\n  const [type, setType] = useState('standart');\r\n  const [placeholders, setPlaceholders] = useState([\r\n    'Сходить на футбол',\r\n    'Купить продукты',\r\n    'Навестить родственников',\r\n    'Купить подарок',\r\n    'Помыть посуду',\r\n    'Прибраться в доме',\r\n    'Починить что-то в доме',\r\n    'Сьездить в отпуск',\r\n    'Отправиться в путешествие',\r\n    'Вынести мусор',\r\n    'Купить вкусняшек',\r\n  ]);\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const todo = { id: uuidv4(), text, type, completed: false };\r\n    todo.text !== '' && handleFormSubmit(todo);\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => setText('');\r\n\r\n  const changeInputValue = event => setText(event.target.value);\r\n\r\n  const getRandomInRange = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-creator__form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={changeInputValue}\r\n        autoComplete=\"off\"\r\n        placeholder={placeholders[getRandomInRange(0, placeholders.length - 1)]}\r\n      />\r\n      <button className=\"button\" type=\"submit\">\r\n        Добавить\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n//* TodoCreator написанный классом\r\n\r\n// class TodoCreator extends Component {\r\n//   static defaultProps = {\r\n//     text: '',\r\n//     type: 'standart',\r\n//   };\r\n\r\n//   state = {\r\n//     text: this.props.text,\r\n//     type: this.props.type,\r\n//     placeholders: [\r\n//       'Сходить на футбол',\r\n//       'Купить продукты',\r\n//       'Навестить родственников',\r\n//       'Купить подарок',\r\n//       'Помыть посуду',\r\n//       'Прибраться в доме',\r\n//       'Починить что-то в доме',\r\n//       'Сьездить в отпуск',\r\n//       'Отправиться в путешествие',\r\n//       'Вынести мусор',\r\n//       'Купить вкусняшек',\r\n//     ],\r\n//     // placeholder: '',\r\n//   };\r\n\r\n//   onFormSubmit = event => {\r\n//     event.preventDefault();\r\n//     const todo = { id: uuidv4(), text: this.state.text, type: this.state.type, completed: false };\r\n//     todo.text !== '' && this.props.handleFormSubmit(todo);\r\n//     this.formReset();\r\n//   };\r\n\r\n//   formReset = () => this.setState({ text: '' });\r\n\r\n//   changeInputValue = event => this.setState({ text: event.target.value });\r\n\r\n//   getRandomInRange(min, max) {\r\n//     return Math.floor(Math.random() * (max - min + 1)) + min;\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <form className=\"todo-creator__form\" onSubmit={this.onFormSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={this.state.text}\r\n//           onChange={this.changeInputValue}\r\n//           autoComplete=\"off\"\r\n//           placeholder={this.state.placeholders[this.getRandomInRange(0, this.state.placeholders.length - 1)]}\r\n//         />\r\n//         <button type=\"submit\">Добавить</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default TodoCreator;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.scss';\r\n\r\nconst Backdrop = ({ closeEditingForm }) => {\r\n  const body = document.querySelector('body');\r\n\r\n  return <div className=\"backdrop\" style={{ height: body.scrollHeight }} onClick={closeEditingForm}></div>;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useState } from 'react';\r\n\r\nimport './TodoEditor.scss';\r\n\r\nconst TodoEditor = ({ todoText, handleTodoTextEdit, closeEditingForm }) => {\r\n  const [text, setText] = useState(todoText);\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    handleTodoTextEdit(text);\r\n    closeEditingForm();\r\n  };\r\n\r\n  const changeInputValue = event => setText(event.target.value);\r\n\r\n  return (\r\n    <form className=\"todo-editor__form\" onSubmit={onFormSubmit}>\r\n      <input type=\"text\" value={text} onChange={changeInputValue} autoComplete=\"off\" autoFocus />\r\n      <button className=\"button\" type=\"submit\">\r\n        Редактировать\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoEditor;\r\n","import React, { Component, useState, useEffect } from 'react';\n\nimport 'reset-css';\nimport './App.scss';\n\nimport Stats from './components/Stats/Stats';\nimport TodoList from './components/TodoList/TodoList';\nimport Todo from './components/Todo/Todo';\nimport TodoCreator from './components/TodoCreator/TodoCreator';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport TodoEditor from './components/TodoEditor/TodoEditor';\n\nclass App extends Component {\n  state = {\n    todos: [\n      { id: 'id-1', text: 'Это важная Todo', type: 'important', completed: false },\n      { id: 'id-2', text: 'Важные Todo выделены красным цветом', type: 'important', completed: false },\n      { id: 'id-3', text: 'А это стандартная Todo', type: 'standart', completed: false },\n      {\n        id: 'id-4',\n        text:\n          'Что-бы добавить свою Todo необходимо в графе ниже ввести текст и нажать на кнопку Добавить, после чего новая Todo появится первой в списке',\n        type: 'standart',\n        completed: false,\n      },\n      {\n        id: 'id-5',\n        text:\n          'Todo можно двигать выше и ниже при помощи стрелочек, что позволяет пользователю хранить Todo как ему больше нравится (например важные поднять повыше, а выполненные отправить вниз)',\n        type: 'standart',\n        completed: false,\n      },\n      {\n        id: 'id-6',\n        text: 'Карандашик позже будет давать возможность редактировать Todo',\n        type: 'standart',\n        completed: false,\n      },\n      {\n        id: 'id-7',\n        text: 'Крестик полностью удаляет Todo из списка',\n        type: 'standart',\n        completed: false,\n      },\n      {\n        id: 'id-8',\n        text: 'А вот так вот выглядит выполненная Todo',\n        type: 'standart',\n        completed: true,\n      },\n      {\n        id: 'id-9',\n        text: 'Чем больше выполненных Todo тем лучше ✅',\n        type: 'standart',\n        completed: true,\n      },\n      {\n        id: 'id-10',\n        text: 'Теперь можно удалять все эти Todo и добавлять свои 😊',\n        type: 'standart',\n        completed: true,\n      },\n    ],\n    todoToUpdateText: '',\n    todoToUpdateId: '',\n    isTodoEditing: false,\n  };\n\n  componentDidMount() {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    todos !== null && this.setState({ todos: todos });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.todos !== this.state.todos && localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    // localStorage.clear();\n  }\n\n  handleFormSubmit = todo => this.setState({ todos: [todo, ...this.state.todos] });\n\n  upTodo = index => {\n    if (index !== 0) {\n      const newTodos = this.state.todos;\n      const clickedTodo = newTodos[index];\n      newTodos.splice(index, 1);\n      newTodos.splice(index - 1, 0, clickedTodo);\n      console.log(newTodos);\n\n      this.setState({ todos: newTodos });\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  };\n\n  downTodo = index => {\n    if (index !== this.state.todos.length - 1) {\n      const newTodos = this.state.todos;\n      const clickedTodo = newTodos[index];\n      newTodos.splice(index, 1);\n      newTodos.splice(index + 1, 0, clickedTodo);\n      console.log(newTodos);\n\n      this.setState({ todos: newTodos });\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  };\n\n  handleTodoEdit = (text, id) => this.setState({ todoToUpdateText: text, todoToUpdateId: id, isTodoEditing: true });\n\n  handleTodoTextEdit = text => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === this.state.todoToUpdateId ? { ...todo, text } : todo)),\n    }));\n  };\n\n  closeEditingForm = () => this.setState({ isTodoEditing: false });\n\n  handleTodoDelete = id => {\n    this.setState({ todos: this.state.todos.filter(todo => todo.id !== id) });\n  };\n\n  onTodoClick = id => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === id ? { ...todo, completed: !todo.completed } : todo)),\n    }));\n  };\n\n  filterTodos = () => {\n    const importantTodos = this.state.todos.filter(todo => todo.type === 'important' && todo.completed === false);\n    const standartTodos = this.state.todos.filter(todo => todo.type === 'standart' && todo.completed === false);\n    const completedTodos = this.state.todos.filter(todo => todo.completed === true);\n    this.setState({ todos: [...importantTodos, ...standartTodos, ...completedTodos] });\n  };\n\n  render() {\n    return (\n      <>\n        <Stats todos={this.state.todos} filterTodos={this.filterTodos} />\n        <TodoList>\n          <Todo\n            todos={this.state.todos}\n            upTodo={this.upTodo}\n            downTodo={this.downTodo}\n            handleTodoEdit={this.handleTodoEdit}\n            handleTodoDelete={this.handleTodoDelete}\n            isTodoDeleting={this.state.isTodoDeleting}\n            onTodoClick={this.onTodoClick}\n          />\n        </TodoList>\n        {!this.state.isTodoEditing && <TodoCreator todos={this.state.todos} handleFormSubmit={this.handleFormSubmit} />}\n        {this.state.isTodoEditing && <Backdrop closeEditingForm={this.closeEditingForm} />}\n        {this.state.isTodoEditing && (\n          <TodoEditor\n            todoText={this.state.todoToUpdateText}\n            handleTodoTextEdit={this.handleTodoTextEdit}\n            closeEditingForm={this.closeEditingForm}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}