{"version":3,"sources":["components/Header/Header.js","components/TodoList/TodoList.js","components/Todo/Todo.js","components/TodoCreator/TodoCreator.js","components/Backdrop/Backdrop.js","components/TodoEditor/TodoEditor.js","App.js","index.js"],"names":["Header","todos","filterTodos","className","length","filter","todo","completed","type","onClick","TodoList","children","Todo","array","upTodo","downTodo","handleTodoEdit","handleTodoDelete","onTodoClick","map","id","onChange","checked","htmlFor","role","text","indexOf","TodoCreator","min","max","handleFormSubmit","useState","setText","setType","placeholders","formReset","onSubmit","event","preventDefault","uuidv4","value","target","autoComplete","placeholder","Math","floor","random","Backdrop","closeEditingForm","body","document","querySelector","style","height","scrollHeight","TodoEditor","todoText","todoType","handleTodoTextEdit","autoFocus","App","state","todoToUpdateText","todoToUpdateType","todoToUpdateId","isTodoEditing","setState","index","newTodos","clickedTodo","splice","console","log","localStorage","setItem","JSON","stringify","prevState","veryImportantTodos","importantTodos","standartTodos","completedTodos","parse","getItem","this","prevProps","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5eee46b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = ({ todos, filterTodos }) => {\r\n  return (\r\n    <header>\r\n      <div className=\"stats\">\r\n        <button className=\"stats__btn stats__all-todos\">{todos.length}</button>\r\n        <button className=\"stats__btn stats__undone-todos\">{todos.filter(todo => !todo.completed).length}</button>\r\n        {/* <button className=\"stats__btn stats__important-todos\">\r\n          {todos.filter(todo => todo.type === 'important' && !todo.completed).length}\r\n        </button> */}\r\n        <button className=\"stats__btn stats__done-todos\">{todos.filter(todo => todo.completed).length}</button>\r\n      </div>\r\n      <button className=\"filter-btn\" type=\"button\" onClick={filterTodos}></button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst TodoList = ({ children }) => {\r\n  return <ul className=\"todo__list\">{children}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Todo.scss';\r\n\r\n//* Todo как обычная функция (переписанная на хуки)\r\n\r\nconst Todo = ({ todos, upTodo, downTodo, handleTodoEdit, handleTodoDelete, onTodoClick }) => {\r\n  const makeMarkup = array => {\r\n    return array.map(todo => {\r\n      return (\r\n        <li className={`todo__item ${todo.type}`} key={todo.id}>\r\n          <input type=\"checkbox\" id={todo.id} onChange={() => onTodoClick(todo.id)} checked={todo.completed} />\r\n          <label htmlFor={todo.id}>\r\n            {todo.type === 'very-important' ? (\r\n              <span className=\"emoji very-important\" role=\"img\">\r\n                ‼️\r\n              </span>\r\n            ) : (\r\n              todo.type === 'important' && (\r\n                <span className=\"emoji important\" role=\"img\">\r\n                  ❗️\r\n                </span>\r\n              )\r\n            )}\r\n            {todo.text}\r\n          </label>\r\n          <div className=\"move-todo-block\">\r\n            <button type=\"button\" className=\"move-todo up-todo\" onClick={() => upTodo(array.indexOf(todo))}></button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"move-todo down-todo\"\r\n              onClick={() => downTodo(array.indexOf(todo))}\r\n            ></button>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"edit-todo\"\r\n            onClick={() => handleTodoEdit(todo.text, todo.type, todo.id)}\r\n          ></button>\r\n          <button type=\"button\" className=\"delete-todo\" onClick={() => handleTodoDelete(todo.id)}></button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  // const importantTodos = todos.filter(todo => todo.type === 'important' && !todo.completed);\r\n  // const standartTodos = todos.filter(todo => todo.type === 'standart' && !todo.completed);\r\n  // const completedTodos = todos.filter(todo => todo.completed);\r\n\r\n  return (\r\n    <>\r\n      {makeMarkup(todos)}\r\n      {/* {makeMarkup(importantTodos)}\r\n          {makeMarkup(standartTodos)}\r\n          {makeMarkup(completedTodos)} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoCreator.scss';\r\n\r\nconst TodoCreator = ({ todos, handleFormSubmit }) => {\r\n  const [text, setText] = useState('');\r\n  const [type, setType] = useState('standart');\r\n  const [placeholders, setPlaceholders] = useState([\r\n    'Сходить на футбол',\r\n    'Купить продукты',\r\n    'Навестить родственников',\r\n    'Купить подарок',\r\n    'Помыть посуду',\r\n    'Прибраться в доме',\r\n    'Починить что-то в доме',\r\n    'Сьездить в отпуск',\r\n    'Отправиться в путешествие',\r\n    'Вынести мусор',\r\n    'Купить вкусняшек',\r\n  ]);\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const todo = { id: uuidv4(), text, type, completed: false };\r\n    todo.text !== '' && handleFormSubmit(todo);\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => setText('');\r\n\r\n  const changeInputValue = event => setText(event.target.value);\r\n\r\n  const getRandomInRange = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const changeTodoType = event => {\r\n    event.target.value === 'standart' && setType('important');\r\n    event.target.value === 'important' && setType('very-important');\r\n    event.target.value === 'very-important' && setType('standart');\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-creator__form\" onSubmit={onFormSubmit}>\r\n      <button className=\"todo-type-btn\" type=\"button\" value={type} onClick={changeTodoType}></button>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={changeInputValue}\r\n        autoComplete=\"off\"\r\n        placeholder={placeholders[getRandomInRange(0, placeholders.length - 1)]}\r\n      />\r\n      <button className=\"add-todo-btn\" type=\"submit\"></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoCreator;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.scss';\r\n\r\nconst Backdrop = ({ closeEditingForm }) => {\r\n  const body = document.querySelector('body');\r\n  return <div className=\"backdrop\" style={{ height: body.scrollHeight }} onClick={closeEditingForm}></div>;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useState } from 'react';\r\nimport './TodoEditor.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst TodoEditor = ({ todoText, todoType, handleTodoTextEdit, closeEditingForm }) => {\r\n  const [text, setText] = useState(todoText);\r\n  const [type, setType] = useState(todoType);\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    handleTodoTextEdit(text, type);\r\n    closeEditingForm();\r\n  };\r\n\r\n  const changeInputValue = event => setText(event.target.value);\r\n\r\n  const changeTodoType = event => {\r\n    event.target.value === 'standart' && setType('important');\r\n    event.target.value === 'important' && setType('very-important');\r\n    event.target.value === 'very-important' && setType('standart');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop closeEditingForm={closeEditingForm} />\r\n      <form className=\"todo-editor__form\" onSubmit={onFormSubmit}>\r\n        <button className=\"todo-type-btn\" type=\"button\" value={type} onClick={changeTodoType}></button>\r\n        <input type=\"text\" value={text} onChange={changeInputValue} autoComplete=\"off\" autoFocus />\r\n        <button className=\"edit-todo-btn\" type=\"submit\"></button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoEditor;\r\n","import React, { Component } from 'react';\n\nimport 'reset-css';\nimport './App.scss';\n\nimport Header from './components/Header/Header';\nimport TodoList from './components/TodoList/TodoList';\nimport Todo from './components/Todo/Todo';\nimport TodoCreator from './components/TodoCreator/TodoCreator';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport TodoEditor from './components/TodoEditor/TodoEditor';\n\nclass App extends Component {\n  state = {\n    todos: [\n      {\n        id: 'id-1',\n        text: 'Это очень важная Todo. Очень важные Todo выделены ярко-голубым цветом и двумя знаками восклицания.',\n        type: 'very-important',\n        completed: false,\n      },\n      {\n        id: 'id-2',\n        text: 'Это важная Todo. Важные Todo выделены тускло-голубым цветом и одним знаком восклицания.',\n        type: 'important',\n        completed: false,\n      },\n      {\n        id: 'id-3',\n        text: 'Это стандартная Todo. Стандартные Todo выделены серым цветом.',\n        type: 'standart',\n        completed: false,\n      },\n      {\n        id: 'id-4',\n        text: 'Это выполненная Todo. Выполненные Todo подсвечиваются зеленым цветом и помечены галочкой.',\n        type: 'standart',\n        completed: true,\n      },\n    ],\n    todoToUpdateText: '',\n    todoToUpdateType: '',\n    todoToUpdateId: '',\n    isTodoEditing: false,\n  };\n\n  componentDidMount() {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    todos !== null && this.setState({ todos: todos });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.todos !== this.state.todos && localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    // localStorage.clear();\n  }\n\n  handleFormSubmit = todo => this.setState({ todos: [todo, ...this.state.todos] });\n\n  upTodo = index => {\n    if (index !== 0) {\n      const newTodos = this.state.todos;\n      const clickedTodo = newTodos[index];\n      newTodos.splice(index, 1);\n      newTodos.splice(index - 1, 0, clickedTodo);\n      console.log(newTodos);\n\n      this.setState({ todos: newTodos });\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  };\n\n  downTodo = index => {\n    if (index !== this.state.todos.length - 1) {\n      const newTodos = this.state.todos;\n      const clickedTodo = newTodos[index];\n      newTodos.splice(index, 1);\n      newTodos.splice(index + 1, 0, clickedTodo);\n      console.log(newTodos);\n\n      this.setState({ todos: newTodos });\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  };\n\n  handleTodoEdit = (text, type, id) =>\n    this.setState({ todoToUpdateText: text, todoToUpdateType: type, todoToUpdateId: id, isTodoEditing: true });\n\n  handleTodoTextEdit = (text, type) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === this.state.todoToUpdateId ? { ...todo, text, type } : todo)),\n    }));\n  };\n\n  closeEditingForm = () => this.setState({ isTodoEditing: false });\n\n  handleTodoDelete = id => {\n    this.setState({ todos: this.state.todos.filter(todo => todo.id !== id) });\n  };\n\n  onTodoClick = id => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === id ? { ...todo, completed: !todo.completed } : todo)),\n    }));\n  };\n\n  filterTodos = () => {\n    const veryImportantTodos = this.state.todos.filter(\n      todo => todo.type === 'very-important' && todo.completed === false,\n    );\n    const importantTodos = this.state.todos.filter(todo => todo.type === 'important' && todo.completed === false);\n    const standartTodos = this.state.todos.filter(todo => todo.type === 'standart' && todo.completed === false);\n    const completedTodos = this.state.todos.filter(todo => todo.completed === true);\n    this.setState({ todos: [...veryImportantTodos, ...importantTodos, ...standartTodos, ...completedTodos] });\n  };\n\n  render() {\n    return (\n      <>\n        <Header todos={this.state.todos} filterTodos={this.filterTodos} />\n        <TodoList todos={this.state.todos}>\n          <Todo\n            todos={this.state.todos}\n            upTodo={this.upTodo}\n            downTodo={this.downTodo}\n            handleTodoEdit={this.handleTodoEdit}\n            handleTodoDelete={this.handleTodoDelete}\n            onTodoClick={this.onTodoClick}\n          />\n        </TodoList>\n        {!this.state.isTodoEditing ? (\n          <TodoCreator todos={this.state.todos} handleFormSubmit={this.handleFormSubmit} />\n        ) : (\n          <TodoEditor\n            todoText={this.state.todoToUpdateText}\n            todoType={this.state.todoToUpdateType}\n            handleTodoTextEdit={this.handleTodoTextEdit}\n            closeEditingForm={this.closeEditingForm}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}