{"version":3,"sources":["components/Header/Header.js","components/TodoList/TodoList.js","components/LocalStorageInfo/LocalStorageInfo.js","components/Backdrop/Backdrop.js","components/TodoCreator/TodoCreator.js","components/TodoEditor/TodoEditor.js","App.js","index.js"],"names":["Header","todos","className","length","filter","todo","completed","TodoList","handleTodoClick","upTodo","downTodo","handleEditBtnClick","handleDeleteBtnClick","map","type","id","onChange","checked","htmlFor","role","text","onClick","indexOf","LocalStorageInfo","Backdrop","isTodoEditing","closeEditingForm","body","document","querySelector","CSSTransition","in","timeout","classNames","unmountOnExit","style","height","scrollHeight","TodoCreator","min","max","handleTodoCreating","useState","setText","setType","placeholders","formReset","onSubmit","event","preventDefault","uuidv4","value","target","autoComplete","placeholder","Math","floor","random","TodoEditor","editingTodo","handleTodoEdit","updatedTodo","autoFocus","App","setTodos","setEditingTodo","setIsTodoEditing","useEffect","localStorageTodos","JSON","parse","localStorage","getItem","setItem","stringify","sortTodos","allTodos","veryImportantTodos","importantTodos","standartTodos","completedTodos","clickedTodo","prevTodos","newTodos","index","splice","todoToUpdate","todoToDelete","createdTodo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.425d8273.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = ({ todos }) => {\r\n  return (\r\n    <header>\r\n      <div className=\"stats\">\r\n        <button className=\"stats__btn stats__all-todos\">{todos.length}</button>\r\n        <button className=\"stats__btn stats__undone-todos\">{todos.filter(todo => !todo.completed).length}</button>\r\n        {/* <button className=\"stats__btn stats__important-todos\">\r\n          {todos.filter(todo => todo.type === 'important' && !todo.completed).length}\r\n        </button> */}\r\n        <button className=\"stats__btn stats__done-todos\">{todos.filter(todo => todo.completed).length}</button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, handleTodoClick, upTodo, downTodo, handleEditBtnClick, handleDeleteBtnClick }) => {\r\n  return (\r\n    <ul className=\"todo__list\">\r\n      {todos.map(todo => {\r\n        return (\r\n          <li className={`todo__item ${todo.type}`} key={todo.id}>\r\n            <input type=\"checkbox\" id={todo.id} onChange={() => handleTodoClick(todo)} checked={todo.completed} />\r\n            <label htmlFor={todo.id}>\r\n              {todo.type === 'very-important' ? (\r\n                <span className=\"emoji very-important\" role=\"img\">\r\n                  ‼️ {/*! !*/}\r\n                </span>\r\n              ) : (\r\n                todo.type === 'important' && (\r\n                  <span className=\"emoji important\" role=\"img\">\r\n                    ❗️ {/*!*/}\r\n                  </span>\r\n                )\r\n              )}\r\n              {todo.text}\r\n            </label>\r\n            <div className=\"move-todo-block\">\r\n              <button type=\"button\" className=\"move-todo up-todo\" onClick={() => upTodo(todos.indexOf(todo))}></button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"move-todo down-todo\"\r\n                onClick={() => downTodo(todos.indexOf(todo))}\r\n              ></button>\r\n            </div>\r\n            <button type=\"button\" className=\"edit-todo\" onClick={() => handleEditBtnClick(todo)}></button>\r\n            <button type=\"button\" className=\"delete-todo\" onClick={() => handleDeleteBtnClick(todo)}></button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// const TodoList = ({ children, todos }) => {\r\n//   return <ul className=\"todo__list\">{children}</ul>;\r\n// };\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport './LocalStorageInfo.scss'\r\n\r\nconst LocalStorageInfo = () => {\r\n  return (\r\n    <p className=\"localStorage__text\">\r\n      Для хранения данных <span className=\"localStorage__text active\">не используется бекенд!</span> Все данные хранятся\r\n      в локальном хранилище браузера - Local Storage.{' '}\r\n      <span className=\"localStorage__text active\">Не очищайте Local Storage</span> во избежание удаления всех todos.\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default LocalStorageInfo;\r\n","import { CSSTransition } from 'react-transition-group';\r\nimport './Backdrop.scss';\r\n\r\nconst Backdrop = ({ isTodoEditing, closeEditingForm }) => {\r\n  const body = document.querySelector('body');\r\n\r\n  return (\r\n    <CSSTransition in={isTodoEditing} timeout={500} classNames=\"backdrop\" unmountOnExit>\r\n      <div className=\"backdrop\" style={{ height: body.scrollHeight }} onClick={closeEditingForm}></div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoCreator.scss';\r\n\r\nconst TodoCreator = ({ handleTodoCreating }) => {\r\n  const [text, setText] = useState('');\r\n  const [type, setType] = useState('standart');\r\n  const [placeholders, _] = useState([\r\n    'Сходить на футбол',\r\n    'Купить продукты',\r\n    'Навестить родственников',\r\n    'Купить подарок',\r\n    'Помыть посуду',\r\n    'Прибраться в доме',\r\n    'Починить что-то в доме',\r\n    'Сьездить в отпуск',\r\n    'Отправиться в путешествие',\r\n    'Вынести мусор',\r\n    'Купить вкусняшек',\r\n  ]);\r\n\r\n  const changeInputValue = event => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const todo = { id: uuidv4(), text, type, completed: false };\r\n    todo.text && handleTodoCreating(todo);\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setText('');\r\n    setType('standart');\r\n  };\r\n\r\n  const getRandomInRange = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const changeTodoType = event => {\r\n    event.target.value === 'standart' && setType('important');\r\n    event.target.value === 'important' && setType('very-important');\r\n    event.target.value === 'very-important' && setType('standart');\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-creator__form\" onSubmit={onFormSubmit}>\r\n      <button className=\"todo-type-btn\" type=\"button\" value={type} onClick={changeTodoType}>\r\n        {type === 'very-important' ? '!!' : type === 'important' && '!'}\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={changeInputValue}\r\n        autoComplete=\"off\"\r\n        placeholder={placeholders[getRandomInRange(0, placeholders.length - 1)]}\r\n      />\r\n      <button className=\"add-todo-btn\" type=\"submit\"></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoCreator;\r\n","import { useState } from 'react';\r\nimport './TodoEditor.scss';\r\n\r\nconst TodoEditor = ({ editingTodo, handleTodoEdit }) => {\r\n  const [text, setText] = useState(editingTodo.text);\r\n  const [type, setType] = useState(editingTodo.type);\r\n\r\n  const changeInputValue = event => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const updatedTodo = { id: editingTodo.id, text, type, completed: editingTodo.completed };\r\n    text && handleTodoEdit(updatedTodo);\r\n  };\r\n\r\n  const changeTodoType = event => {\r\n    event.target.value === 'standart' && setType('important');\r\n    event.target.value === 'important' && setType('very-important');\r\n    event.target.value === 'very-important' && setType('standart');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"todo-editor__form\" onSubmit={onFormSubmit}>\r\n        <button className=\"todo-type-btn\" type=\"button\" value={type} onClick={changeTodoType}>\r\n          {type === 'very-important' ? '!!' : type === 'important' && '!'}\r\n        </button>\r\n        <input type=\"text\" value={text} onChange={changeInputValue} autoComplete=\"off\" autoFocus />\r\n        <button className=\"edit-todo-btn\" type=\"submit\"></button>\r\n      </form>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoEditor;\r\n","import { useState, useEffect } from 'react';\nimport 'reset-css';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport TodoList from './components/TodoList/TodoList';\nimport LocalStorageInfo from './components/LocalStorageInfo/LocalStorageInfo';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport TodoCreator from './components/TodoCreator/TodoCreator';\nimport TodoEditor from './components/TodoEditor/TodoEditor';\n\n// const defaultTodos = [\n//   {\n//     id: 'id-1',\n//     text: 'Это очень важная Todo. Очень важные Todo выделены ярко-голубым цветом и двумя знаками восклицания.',\n//     type: 'very-important',\n//     completed: false,\n//   },\n//   {\n//     id: 'id-2',\n//     text: 'Это важная Todo. Важные Todo выделены тускло-голубым цветом и одним знаком восклицания.',\n//     type: 'important',\n//     completed: false,\n//   },\n//   {\n//     id: 'id-3',\n//     text: 'Это стандартная Todo. Стандартные Todo выделены серым цветом.',\n//     type: 'standart',\n//     completed: false,\n//   },\n//   {\n//     id: 'id-4',\n//     text: 'Это выполненная Todo. Выполненные Todo подсвечиваются зеленым цветом и помечены галочкой.',\n//     type: 'standart',\n//     completed: true,\n//   },\n// ];\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodo, setEditingTodo] = useState({});\n  const [isTodoEditing, setIsTodoEditing] = useState(false);\n\n  // componentDidMount()\n  useEffect(() => {\n    const localStorageTodos = JSON.parse(localStorage.getItem('todos'));\n    localStorageTodos && setTodos(localStorageTodos);\n  }, []);\n\n  // componentDidUpdate(prevProps, prevState = todos)\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n    // localStorage.clear();\n  }, [todos]);\n\n  const sortTodos = allTodos => {\n    const veryImportantTodos = allTodos.filter(todo => todo.type === 'very-important' && !todo.completed);\n    const importantTodos = allTodos.filter(todo => todo.type === 'important' && !todo.completed);\n    const standartTodos = allTodos.filter(todo => todo.type === 'standart' && !todo.completed);\n    const completedTodos = allTodos.filter(todo => todo.completed);\n    return [...veryImportantTodos, ...importantTodos, ...standartTodos, ...completedTodos];\n  };\n\n  const handleTodoCreating = createdTodo => {\n    setTodos(sortTodos([createdTodo, ...todos]));\n  };\n\n  const handleTodoClick = clickedTodo => {\n    setTodos(prevTodos => {\n      const newTodos = prevTodos.map(todo =>\n        todo.id === clickedTodo.id ? { ...clickedTodo, completed: !clickedTodo.completed } : todo,\n      );\n      return sortTodos(newTodos);\n    });\n  };\n\n  const upTodo = index => {\n    if (index !== 0) {\n      const newTodos = todos;\n      const clickedTodo = newTodos[index];\n      newTodos.splice(index, 1);\n      newTodos.splice(index - 1, 0, clickedTodo);\n      // console.log(newTodos);\n      setTodos(sortTodos([...newTodos]));\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  };\n\n  const downTodo = index => {\n    if (index !== todos.length - 1) {\n      const newTodos = todos;\n      const clickedTodo = newTodos[index];\n      newTodos.splice(index, 1);\n      newTodos.splice(index + 1, 0, clickedTodo);\n      // console.log(newTodos);\n      setTodos(sortTodos([...newTodos]));\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    }\n  };\n\n  const handleEditBtnClick = todoToUpdate => {\n    setIsTodoEditing(true);\n    setEditingTodo(todoToUpdate);\n  };\n\n  const handleTodoEdit = updatedTodo => {\n    setTodos(prevTodos => {\n      const newTodos = prevTodos.map(todo => (todo.id === updatedTodo.id ? updatedTodo : todo));\n      return sortTodos(newTodos);\n    });\n    closeEditingForm();\n  };\n\n  const closeEditingForm = () => {\n    setIsTodoEditing(false);\n  };\n\n  const handleDeleteBtnClick = todoToDelete => {\n    const newTodos = todos.filter(todo => todo.id !== todoToDelete.id);\n    setTodos(sortTodos(newTodos));\n  };\n\n  return (\n    <>\n      <Header todos={todos} />\n      <TodoList\n        todos={todos}\n        handleTodoClick={handleTodoClick}\n        upTodo={upTodo}\n        downTodo={downTodo}\n        handleEditBtnClick={handleEditBtnClick}\n        handleDeleteBtnClick={handleDeleteBtnClick}\n      />\n      <LocalStorageInfo />\n      <Backdrop isTodoEditing={isTodoEditing} closeEditingForm={closeEditingForm} />\n      {!isTodoEditing ? (\n        <TodoCreator handleTodoCreating={handleTodoCreating} />\n      ) : (\n        <TodoEditor editingTodo={editingTodo} handleTodoEdit={handleTodoEdit} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}